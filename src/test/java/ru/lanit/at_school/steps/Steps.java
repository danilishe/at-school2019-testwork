package ru.lanit.at_school.steps;

import io.cucumber.java.ru.*;
import ru.lanit.at_school.pages.StartPage;

import java.awt.*;

public class Steps {
    StartPage start;

    @Дано("открыта страница сайта и отображаются блоки")
    public void открытаСтраницаСайтаИОтображаютсяБлоки() throws AWTException {
        start = new StartPage().open()
                .pagecheck();
    }

    @Затем("выбираем произвольный регион")
    public void выбираемПроизвольныйРегион() throws AWTException {
        StartPage.regioncheck("Санкт-Петербург").pagecheck();
    }

    @Затем("выбираем регион автоматически")
    public void выбираемРегионАвтоматически() {
        StartPage.regionauto();
    }

    @Затем("выбираем меню все категории")
    public void выбираемМенюВсеКатегории() {
        StartPage.allcats();
    }

    @Затем("выбираем категорию Компьютерная техника")
    public void выбираемКатегориюКомпьютернаяТехника() {
        StartPage.compTechcat();
    }

    @Затем("выбираем произвольную категорию второго уровня")
    public void выбираемПроизвольнуюКатегориюВторогоУровня() {
        StartPage.compTech2ndcat();
    }

    @Если("присутствуют блоки, запоминаем список подкатегорий")
    public void присутствуютБлокиЗапоминаемСписокПодкатегорий() {
        StartPage.memo();
        StartPage.goodsvisible();
    }

    @Если("навести курсор на произвольный товар, у товара появляется кнопка добавить в избранное")
    public void навестиКурсорНаПроизвольныйТоварУТовараПоявляетсяКнопкаДобавитьВИзбранное() {
        StartPage.randomgoods();
    }

    @Также("добавляем товар в избранное")
    public void добавляемТоварВИзбранное() {
        StartPage.favourite();
    }

    @Затем("активируем флажок в продаже если он не активирован")
    public void активируемФлажокВПродажеЕслиОнНеАктивирован() {
        StartPage.onsale();
    }

    @Затем("в блок цена от устанавливаем максимальную цену из блока цена до убеждаемся что присутствует хотя бы один товар и очищаем поле блока цена от")
    public void вБлокЦенаОтУстанавливаемМаксимальнуюЦенуИзБлокаЦенаДоУбеждаемсяЧтоПрисутствуетХотяБыОдинТоварИОчищаемПолеБлокаЦенаОт() {
        StartPage.pricemin();
    }

    @Затем("в блок цена до устанавливаем максимальную цену из блока цена от убеждаемся что присутствует хотя бы один товар и очищаем поле блока цена до")
    public void вБлокЦенаДоУстанавливаемМаксимальнуюЦенуИзБлокаЦенаОтУбеждаемсяЧтоПрисутствуетХотяБыОдинТоварИОчищаемПолеБлокаЦенаДо() {
        StartPage.pricemax();
    }

    @Затем("выбираем произвольного производителя из блока производитель")
    public void выбираемПроизвольногоПроизводителяИзБлокаПроизводитель() {
        StartPage.randproducer();
    }

    @Затем("выбираем произвольный товар запоминаем его название и цену")
    public void выбираемПроизвольныйТоварЗапоминаемЕгоНазваниеИЦену() throws AWTException {
        StartPage.randgood();
    }
}



